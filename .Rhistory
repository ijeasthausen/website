geom_boxplot() +
labs(x = '', y = '', title = 'Number of ER Visits')
grid.arrange(grobs = list(box_total_cost, box_ervisits), ncol = 2, nrow = 1)
heart_disease = heart_disease %>%
mutate(totalcost_log = log(totalcost+1))
heart_disease %>%
ggplot(aes(y = totalcost_log, x = totalcost_log)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Transformed Total Cost')
heart_disease %>%
ggplot(aes(x = ervisits, y = totalcost_log)) +
geom_point() +
labs(y = 'Total Cost in Dollars', x = 'Number of ER Visits')
model_1 = lm(totalcost_log ~ ervisits, data = heart_disease)
summary(model_1)
beta_for_interpretation1 = exp(0.22529)
beta_for_interpretation1
model_3 = lm(totalcost_log ~ ervisits + complications_bin + ervisits*complications_bin, data = heart_disease)
heart_disease = heart_disease %>%
mutate(complications_bin = ifelse(complications > 0, 1, 0), complications_bin = as.factor(complications_bin))
heart_disease %>%
ggplot(aes(x = ervisits, y = totalcost_log)) +
geom_point() +
labs(y = 'Total Cost in Dollars', x = 'Number of ER Visits')
model_1 = lm(totalcost_log ~ ervisits, data = heart_disease)
summary(model_1)
beta_for_interpretation1 = exp(0.22529)
beta_for_interpretation1
model_3 = lm(totalcost_log ~ ervisits + complications_bin + ervisits*complications_bin, data = heart_disease)
summary(model_3)
model_2 = lm(totalcost_log ~ ervisits + complications_bin, data = heart_disease)
summary(model_2)
model_5 = lm(totalcost_log ~ ervisits + complications_bin + duration, data = heart_disease)
summary(model_5)
beta_for_interpretation5 = exp(0.1682654)
beta_for_interpretation5
anova(model_2, model_5)
model_5 = lm(totalcost_log ~ ervisits + complications_bin + duration, data = heart_disease)
summary(model_5)
t_crit = pt(0.975, 784)
t_crit
lower_CI_b1 = 0.1682654 - (0.0224921*t_crit)
upper_CI_b1 = 0.1682654 + (0.0224921*t_crit)
lower_CI_b1
upper_CI_b1
beta_for_interpretation5 = exp(0.1682654)
beta_for_interpretation5
lower_CI_b1_for_interp = exp(lower_CI_b1_for_interp)
model_5 = lm(totalcost_log ~ ervisits + complications_bin + duration, data = heart_disease)
summary(model_5)
t_crit = pt(0.975, 784)
t_crit
lower_CI_b1 = 0.1682654 - (0.0224921*t_crit)
upper_CI_b1 = 0.1682654 + (0.0224921*t_crit)
lower_CI_b1
upper_CI_b1
beta_for_interpretation5 = exp(0.1682654)
beta_for_interpretation5
lower_CI_b1_for_interp = exp(lower_CI_b1)
upper_CI_b1_for_interp = exp(upper_CI_b1)
lower_CI_b1_for_interp
upper_CI_b1_for_interp
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(kableExtra)
library(knitr)
library(gridExtra)
library(ggplot2)
library(faraway)
state.x77
View(state.x77)
states = as.tibble(state.x77)
states
states = as.tibble(state.x77) %>%
clean_names()
View(states)
states
states = as.tibble(state.x77) %>%
clean_names()
sum_stats_life_exp = states %>%
summarise('Number of Observations' = n(), Mean = mean(life_exp),
Median = median(life_exp), Variance = var(life_exp),
'Standard Deviation' = sd(life_exp), Minimum = min(life_exp),
Maximun = max(life_exp), IQR = IQR(life_exp)) %>%
`row.names<-`('Life Expectancy')
sum_stats_population = states %>%
summarise('Number of Observations' = n(), Mean = mean(population),
Median = median(population), Variance = var(population),
'Standard Deviation' = sd(population), Minimum = min(population),
Maximun = max(population), IQR = IQR(population)) %>%
`row.names<-`('Population')
sum_stats_income = states %>%
summarise('Number of Observations' = n(), Mean = mean(income),
Median = median(income), Variance = var(income),
'Standard Deviation' = sd(income), Minimum = min(income),
Maximun = max(income), IQR = IQR(income)) %>%
`row.names<-`('Per Capita Income')
sum_stats_illiteracy = states %>%
summarise('Number of Observations' = n(), Mean = mean(illiteracy),
Median = median(illiteracy), Variance = var(illiteracy),
'Standard Deviation' = sd(illiteracy),
Minimum = min(illiteracy),
Maximun = max(illiteracy), IQR = IQR(illiteracy)) %>%
`row.names<-`('Illiteracy Rate (%)')
sum_stats_murder = states %>%
summarise('Number of Observations' = n(), Mean = mean(murder),
Median = median(murder), Variance = var(murder),
'Standard Deviation' = sd(murder), Minimum = min(murder),
Maximun = max(murder), IQR = IQR(murder)) %>%
`row.names<-`('Murder Rate (per 100,000)')
sum_stats_hs_grad = states %>%
summarise('Number of Observations' = n(), Mean = mean(hs_grad),
Median = median(hs_grad), Variance = var(hs_grad),
'Standard Deviation' = sd(hs_grad), Minimum = min(hs_grad),
Maximun = max(hs_grad), IQR = IQR(hs_grad)) %>%
`row.names<-`('Percent High School Graduates')
sum_stats_frost = states %>%
summarise('Number of Observations' = n(), Mean = mean(frost),
Median = median(frost), Variance = var(frost),
'Standard Deviation' = sd(frost), Minimum = min(frost),
Maximun = max(frost), IQR = IQR(frost)) %>%
`row.names<-`('Number of Days Below Freezing')
sum_stats_area = states %>%
summarise('Number of Observations' = n(), Mean = mean(area),
Median = median(area), Variance = var(area),
'Standard Deviation' = sd(area), Minimum = min(area),
Maximun = max(area), IQR = IQR(area)) %>%
`row.names<-`('Land Area (mi^2)')
sum_stats2 = rbind(sum_stats_life_exp, sum_stats_population, sum_stats_income, sum_stats_illiteracy, sum_stats_murder, sum_stats_hs_grad, sum_stats_frost, sum_stats_area) %>%
kable(format = "latex") %>%
kable_styling(latex_options = c("scale_down"))
box_life_exp = states %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = ln(life_exp))
states1 = states %>%
mutate(life_exp = log(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = sqrt(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = 1/sqrt(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = 1/log(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = (life_exp)^2)
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = 1/(life_exp)^2)
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = 1/sqrt(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = 1/(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = log(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = (life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = log(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = sqrt(life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = (life_exp)^2)
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
states1 = states %>%
mutate(life_exp = (life_exp))
box_life_exp = states1 %>%
ggplot(aes(y = life_exp, x = life_exp)) +
geom_boxplot() +
labs(x = '', y = '', title = 'Life Expectancy')
hist_life_exp = states1 %>%
ggplot(aes(x = life_exp)) +
geom_histogram() +
labs(title = 'Life Expectancy')
grid.arrange(grobs = list(box_life_exp, hist_life_exp), ncol = 2, nrow = 1)
knitr::opts_chunk$set(echo = TRUE)
data_surg<-read.csv("Surgical.csv")
x
knitr::opts_chunk$set(echo = TRUE)
data_hosp<-read.csv("/Users/ImaaniEasthausen/Downloads/Hospital.csv")
data_surg<-read.csv("/Users/ImaaniEasthausen/Downloads/Surgical.csv")
pairs(surg)
pairs(data_surg)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(dplyr)
library(kableExtra)
library(knitr)
library(gridExtra)
library(ggplot2)
library(faraway)
pairs(states)
pairs(states, panel.smooth)
pairs(states, smooth)
pairs(states, panel = panel.smooth)
states
box_life_exp = states %>%
ggplot(aes(y = life_exp, x = income)) +
geom_point() + geom_line()
box_life_exp
box_life_exp = states %>%
ggplot(aes(y = life_exp, x = income)) +
geom_point() + geom_smooth()
box_life_exp
pairs(states, panel = panel.smooth)
pairs(states, panel = panel.smooth)
box_life_exp = states %>%
ggplot(aes(y = life_exp, x = log(income)) +
geom_point() + geom_smooth()
states %>%
states %>%
ggplot(aes(y = life_exp, x = log(income))) +
geom_point() + geom_smooth()
states %>%
ggplot(aes(y = life_exp, x = sqrt(income))) +
geom_point() + geom_smooth()
states %>%
ggplot(aes(y = life_exp, x = 1/(income))) +
geom_point() + geom_smooth()
states %>%
ggplot(aes(y = life_exp, x = 1/(income^2))) +
geom_point() + geom_smooth()
states %>%
ggplot(aes(y = life_exp, x = 1/(log(income)))) +
geom_point() + geom_smooth()
states %>%
ggplot(aes(y = life_exp, x = 1/(sqrt(income)))) +
geom_point() + geom_smooth()
states %>%
mutate(income = log(income))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = sqrt(income))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = 1/(income))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = 1/log(income))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = 1/(income^2))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = log(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = sqrt(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = log(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = sqrt(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/(log(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/(log(area)))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/(area^2))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/(area^2))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/sqrt(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = log(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/log(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = sqrt(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = (area^2))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = log(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = (area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = log(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = (area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = (area^3))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = (income^2))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = (income))%>%
pairs(panel = panel.smooth)
states %>%
mutate(income = (income^2))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = 1/(area))%>%
pairs(panel = panel.smooth)
states %>%
mutate(area = log(area))%>%
pairs(panel = panel.smooth)
qt(0.975, 148)
install.packages('ggmap')
install.packages('leaflet')
install.packages('splitstackshape')
alzheimers
alzheimers
alzheimers
get_node = function(node_name, xml_file) {
xmlTreeParse(xml_file, useInternal = TRUE) %>%
xmlRoot() %>%
xpathSApply(node_name, xmlValue)
}
get_node_value = function(node_name, xml_file) {
xpathSApply(xml_file, node_name, xmlValue)
}
files = list.files("data/xml_files")
list_of_dfs = list()
for(i in files) {
file_path = paste("data/xml_files/", i, sep = '')
xml_file = read_xml(file_path) %>%
xmlTreeParse(useInternal = TRUE) %>%
xmlRoot()
node_names = xml_file %>%
names() %>%
unique() #is this step removing data??
l =  sapply(node_names, get_node_value, xml_file)
df = lapply(l, paste, collapse=", ") %>%
as.tibble()
list_of_dfs[[i]] = df
}
knitr::opts_chunk$set(echo = TRUE)
library(rvest)
library(XML)
library(plyr)
library(tidyverse)
get_node = function(node_name, xml_file) {
xmlTreeParse(xml_file, useInternal = TRUE) %>%
xmlRoot() %>%
xpathSApply(node_name, xmlValue)
}
get_node_value = function(node_name, xml_file) {
xpathSApply(xml_file, node_name, xmlValue)
}
files = list.files("data/xml_files")
list_of_dfs = list()
for(i in files) {
file_path = paste("data/xml_files/", i, sep = '')
xml_file = read_xml(file_path) %>%
xmlTreeParse(useInternal = TRUE) %>%
xmlRoot()
node_names = xml_file %>%
names() %>%
unique() #is this step removing data??
l =  sapply(node_names, get_node_value, xml_file)
df = lapply(l, paste, collapse=", ") %>%
as.tibble()
list_of_dfs[[i]] = df
}
alzheimers = ldply(list_of_dfs)
alzheimers
View(alzheimers)
write.csv(alzheimers, file = "alzheimers_data.csv")
install.packages('googleVis')
install.packages('timevis')
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
